<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADs
        CQAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAAwIB/AMgAeYDIQHlAyEB5QMhAeUDIQHlAyEB5QMhAeUDIQHlAyEB5QMh
        AeUDIQHlAyEB5QMhAeUDIAHmAwIB/AMHAQkBYAG1AdEB7AFfAcQB5AH2AV8BxAHkAfYBXwHEAeQB9gFf
        AcQB5AH2AV8BxAHkAfYBXwHEAeQB9gFfAcQB5AH2AV8BxAHkAfYBXwHEAeQB9gFfAcQB5AH2AV8BxAHk
        AfYBXwHEAeQB9gFZAXgBgwG3hAADAgH8AwUBBzAAAwIBAwMCAfwDFwEgAV4B1AH6Af8BXgHUAfoB/wFe
        AdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6
        Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXwGoAcAB44QAAwIB/AMFAQcwAAMCAQMDAgH8AyMBMwFe
        AdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6
        Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AVwBzAHsAfoDAQECgAADAgH8
        AwUBBzAAAwIBAwMCAfwCLgEvAUcBXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/
        AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHU
        AfoB/wFeAdQB+gH/AxABFoAAAwIB/AMFAQcwAAMCAQMDAgH8ATcBOQE6AVoBXgHUAfoB/wFeAdQB+gH/
        AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHU
        AfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AyEBMIAAAwIB/AMFAQcwAAMCAQMDAgH8
        AUABRAFGAW4BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHU
        AfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/
        AS8CMAFJgAADAgH8AwUBBzAAAwIBAwMCAfwBSAFQAVIBgQFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFe
        AdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6
        Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BOwI+AWKAAAMCAfwDBQEHMAADAgEDAwIB/AFPAV0BYQGV
        AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHU
        AfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFGAUwBTgF7
        gAADAgH8AwUBBzAAAwIBAwMCAfwBVgFsAXMBqAFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/
        AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHU
        AfoB/wFeAdQB+gH/AV4B1AH6Af8BUAFdAWEBlIAAAwIB/AMFAQcwAAMCAQMDAgH8AVkBfAGHAbsBXgHU
        AfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/
        AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AVcBcAF4Aa6AAAMC
        AfwDBQEHMAADAgEDAwIB/AFdAZEBogHPAV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHU
        AfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/
        AV4B1AH6Af8BXgHUAfoB/wFcAYgBlgHHgAADAgH8AwUBBzAAAwIBAwMCAfwBXgGpAb8B4gFeAdQB+gH/
        AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHU
        AfoB/wFeAdQB+gH/AV4B1AH6Af8BXgHUAfoB/wFeAdQB+gH/AV4B1AH6Af8BXwGmAb0B4IAAAwIB/AMF
        AQckAANCAYYDDAH2AwwB9gMMAfYDJgHgAVIBrAHPAe8BTgG9Ae0B/gFOAb0B7QH+AUwBwAHwAf8BTAHA
        AfAB/wFMAcAB8AH/AUwBwAHwAf8BTAHAAfAB/wFMAcAB8AH/AUwBwAHwAf8BTAHAAfAB/wFMAcAB8AH/
        AUwBwAHwAf8BTAHBAfAB/wFMAcEB8AH/AVMBrwHVAfKAAAMCAfwDBQEHJAADQwGLAwAB/wMAAf8DMwHR
        AxQBGwFMAWcBdgGxASsBnAHeAf8BKwGcAd4B/wErAZwB3gH/ASsBnAHeAf8BKwGcAd4B/wErAZwB3gH/
        ASsBnAHeAf8BKwGcAd4B/wErAZwB3gH/ASsBnAHeAf8BKwGcAd4B/wErAZwB3gH/ASsBnAHeAf8BKwGc
        Ad4B/wFMAWgBeAG0gAADAgH8AwUBByQAA0MBiwMAAf8DPgG9AwsBDwQAAxQBGwFJAVcBXwGWASsBnAHe
        Af8BKwGcAd4B/wErAZwB3gH/ASsBnAHeAf8BNwGSAccB8wInASgBOwMlATcDJQE3AyUBNwMlATcDJQE3
        AyUBNwMlATcCFAEVARyAAAMCAfwDOgHGAzoBxAM6AcQDOgHEAzoBxAM6AcQDOgHEAzoBxAM6AcQDOgHE
        AyIB5ANDAaUDBAEGDAABPAE/AUEBZwExAZMBygH1ATEBkwHKAfUBMQGTAcoB9QExAZMBygH1AUEBggGn
        Ad6kAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/BAABAQQAAT8B/AEAAQEEAAE/
        AfwGAAE/AfwGAAE/AfwGAAE/AfwGAAE/AfwGAAE/AfwGAAE/AfwGAAE/AfwGAAE/AfwGAAE/AfwGAAE/
        AeAGAAE/AeAGAAE/AeEHAAEDAYEB/wQACw==
</value>
  </data>
</root>